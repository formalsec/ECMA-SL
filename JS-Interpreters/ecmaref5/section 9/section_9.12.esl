/* Copyright (C) 2022-2025 formalsec programmers
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

/* 9.12 The SameValue Algorithm

  The internal comparison abstract operation SameValue(x, y), where x and y are ECMAScript language values, produces true or false.
  Such a comparison is performed as follows: */
function SameValue (x, y) {
  /* 1. If Type(x) is different from Type(y), return false. */
  if (Type(x) != Type(y)) return false;
  /* 2. If Type(x) is Undefined, return true. */
  if (Type(x) == "Undefined") return true;
  /* 3. If Type(x) is Null, return true. */
  if (Type(x) == "Null") return true;
  /* 4. If Type(x) is Number, then. */
  if (Type(x) == "Number") {
    /* a. If x is NaN and y is NaN, return true. */
    if ((is_NaN (x)) && (is_NaN (y))) return true;
    /* b. If x is +0 and y is -0, return false. */
    if (isZero(x) && isMinusZero(y)) return false;
    /* c. If x is -0 and y is +0, return false. */
    if (isMinusZero(x) && isZero(y)) return false;
    /* d. If x is the same Number value as y, return true. */
    if (sameNumber(x, y)) return true;
    /* e. Return false. */
    return false;
  }
  /* 5. If Type(x) is String, then return true if x and y are exactly the same sequence of characters
    (same length and same characters in corresponding positions); otherwise, return false. */
  if (Type(x) == "String") {
    if (sameSequenceOfCharacters(x, y))
      return true;
    return false;
  }
  /* 6. If Type(x) is Boolean, return true if x and y are both true or both false; otherwise, return false. */
  if (Type(x) == "Boolean") {
    if ((x == true && y == true) || (x == false && y == false))
      return true;
    return false;
  }
  /* 7. Return true if x and y refer to the same object. Otherwise, return false. */
  if (sameObject(x, y))
    return true;
  return false;
}

/* Auxiliary functions */
function sameNumber(x, y) {
  return x == y;
}

function sameSequenceOfCharacters(x, y) {
  return x == y;
}

function sameObject(x, y) {
  return x == y;
}

function isZero(x) {
  return (x == 0.) && ((1. / x) == Infinity);
}

function isMinusZero(x) {
  return (x == 0.) && ((1. / x) == -Infinity);
}

function mathematicalValue(x) {
  return x;
}
