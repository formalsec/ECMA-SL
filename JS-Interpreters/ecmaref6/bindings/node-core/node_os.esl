/* Copyright (C) 2022-2025 formalsec programmers
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

function __esl_node_os_platform(globalObject, this, newTarget, strict, params) {
  platform := extern str_symbol("require('os').platform()");
  extern assume(platform == "aix" || platform == "darwin"
    || platform == "freebsd" || platform == "linux" || platform == "openbsd"
    || platform == "sunos" || platform == "win32" || platform == "android");
  return platform;
}

function make_os_object(globalObject, objectPrototype, strict) {
  let realm = { globalEnv : globalObject };
  let os = newLazyObject();
  /* setAllInternalMethodsOfOrdinaryObject(os); */
  setInternalProperty(os, "prototype", objectPrototype);

  let platform = CreateBuiltInFunctionObject([], "__esl_node_os_platform", realm, strict, null);
  createBuiltInProperty(platform, "prototype", objectPrototype);
  createBuiltInProperty(os, "platform", platform);

  return os;
}
