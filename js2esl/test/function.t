Test function.js:
  $ js2esl function.js
  function buildAST () {
  __n0 := {  };
  __n0["type"] := "Program";
  __n0["sourceType"] := "script";
  __n2 := {  };
  __n2["type"] := "ExpressionStatement";
  __n3 := {  };
  __n3["type"] := "Identifier";
  __n3["name"] := "f";
  __n2["expression"] := __n3;
  __n4 := {  };
  __n4["type"] := "VariableDeclaration";
  __n6 := {  };
  __n6["type"] := "VariableDeclarator";
  __n7 := {  };
  __n7["type"] := "Identifier";
  __n7["name"] := "multiplication";
  __n6["id"] := __n7;
  __n8 := {  };
  __n8["type"] := "FunctionExpression";
  __n9 := {  };
  __n9["type"] := "Identifier";
  __n9["name"] := "c";
  __n8["id"] := __n9;
  __n10 := [ "multi" ];
  __n8["params"] := __n10;
  __n11 := {  };
  __n11["type"] := "BlockStatement";
  __n13 := {  };
  __n13["type"] := "VariableDeclaration";
  __n15 := {  };
  __n15["type"] := "VariableDeclarator";
  __n16 := {  };
  __n16["type"] := "Identifier";
  __n16["name"] := "m1";
  __n15["id"] := __n16;
  __n15["init"] := null;
  __n14 := [ __n15 ];
  __n13["declarations"] := __n14;
  __n13["kind"] := "var";
  __n17 := {  };
  __n17["type"] := "ReturnStatement";
  __n18 := {  };
  __n18["type"] := "FunctionExpression";
  __n19 := {  };
  __n19["type"] := "Identifier";
  __n19["name"] := "d";
  __n18["id"] := __n19;
  __n20 := [ "x" ];
  __n18["params"] := __n20;
  __n21 := {  };
  __n21["type"] := "BlockStatement";
  __n23 := {  };
  __n23["type"] := "VariableDeclaration";
  __n25 := {  };
  __n25["type"] := "VariableDeclarator";
  __n26 := {  };
  __n26["type"] := "Identifier";
  __n26["name"] := "mm1";
  __n25["id"] := __n26;
  __n25["init"] := null;
  __n24 := [ __n25 ];
  __n23["declarations"] := __n24;
  __n23["kind"] := "var";
  __n27 := {  };
  __n27["type"] := "ReturnStatement";
  __n28 := {  };
  __n28["type"] := "BinaryExpression";
  __n28["operator"] := "*";
  __n29 := {  };
  __n29["type"] := "Identifier";
  __n29["name"] := "x";
  __n28["left"] := __n29;
  __n30 := {  };
  __n30["type"] := "Identifier";
  __n30["name"] := "multi";
  __n28["right"] := __n30;
  __n27["argument"] := __n28;
  __n22 := [ __n23, __n27 ];
  __n21["body"] := __n22;
  __n21["isSimpleParameterList"] := true;
  __n31 := [ "mm1" ];
  __n21["variableDeclarations"] := __n31;
  __n32 := [  ];
  __n21["functionDeclarations"] := __n32;
  __n33 := [  ];
  __n21["letDeclarations"] := __n33;
  __n34 := [  ];
  __n21["constDeclarations"] := __n34;
  __n21["containsExpression"] := false;
  __n36 := {  };
  __n36["type"] := "Identifier";
  __n36["name"] := "x";
  __n35 := [ __n36 ];
  __n21["paramsDetails"] := __n35;
  __n37 := [ "x" ];
  __n21["paramsNames"] := __n37;
  __n21["codeType"] := "function";
  __n21["strict"] := false;
  __n18["body"] := __n21;
  __n18["generator"] := false;
  __n18["async"] := false;
  __n18["expression"] := false;
  __n17["argument"] := __n18;
  __n12 := [ __n13, __n17 ];
  __n11["body"] := __n12;
  __n11["isSimpleParameterList"] := true;
  __n38 := [ "m1" ];
  __n11["variableDeclarations"] := __n38;
  __n39 := [  ];
  __n11["functionDeclarations"] := __n39;
  __n40 := [  ];
  __n11["letDeclarations"] := __n40;
  __n41 := [  ];
  __n11["constDeclarations"] := __n41;
  __n11["containsExpression"] := false;
  __n43 := {  };
  __n43["type"] := "Identifier";
  __n43["name"] := "multi";
  __n42 := [ __n43 ];
  __n11["paramsDetails"] := __n42;
  __n44 := [ "multi" ];
  __n11["paramsNames"] := __n44;
  __n11["codeType"] := "function";
  __n11["strict"] := false;
  __n8["body"] := __n11;
  __n8["generator"] := false;
  __n8["async"] := false;
  __n8["expression"] := false;
  __n6["init"] := __n8;
  __n5 := [ __n6 ];
  __n4["declarations"] := __n5;
  __n4["kind"] := "var";
  __n45 := {  };
  __n45["type"] := "VariableDeclaration";
  __n47 := {  };
  __n47["type"] := "VariableDeclarator";
  __n48 := {  };
  __n48["type"] := "Identifier";
  __n48["name"] := "ret";
  __n47["id"] := __n48;
  __n49 := {  };
  __n49["type"] := "CallExpression";
  __n50 := {  };
  __n50["type"] := "Identifier";
  __n50["name"] := "f";
  __n49["callee"] := __n50;
  __n49["is_tail_call"] := 'undefined;
  __n52 := {  };
  __n52["type"] := "Literal";
  __n52["value"] := 1.;
  __n52["raw"] := "1";
  __n53 := {  };
  __n53["type"] := "Literal";
  __n53["value"] := 2.;
  __n53["raw"] := "2";
  __n51 := [ __n52, __n53 ];
  __n49["arguments"] := __n51;
  __n47["init"] := __n49;
  __n46 := [ __n47 ];
  __n45["declarations"] := __n46;
  __n45["kind"] := "var";
  __n1 := [ __n2, __n4, __n45 ];
  __n0["body"] := __n1;
  __n54 := [ "multiplication", "ret" ];
  __n0["variableDeclarations"] := __n54;
  __n56 := {  };
  __n56["type"] := "FunctionDeclaration";
  __n57 := {  };
  __n57["type"] := "Identifier";
  __n57["name"] := "f";
  __n56["id"] := __n57;
  __n58 := [ "x", "y" ];
  __n56["params"] := __n58;
  __n59 := {  };
  __n59["type"] := "BlockStatement";
  __n61 := {  };
  __n61["type"] := "VariableDeclaration";
  __n63 := {  };
  __n63["type"] := "VariableDeclarator";
  __n64 := {  };
  __n64["type"] := "Identifier";
  __n64["name"] := "z";
  __n63["id"] := __n64;
  __n65 := {  };
  __n65["type"] := "BinaryExpression";
  __n65["operator"] := "+";
  __n66 := {  };
  __n66["type"] := "Identifier";
  __n66["name"] := "x";
  __n65["left"] := __n66;
  __n67 := {  };
  __n67["type"] := "Identifier";
  __n67["name"] := "y";
  __n65["right"] := __n67;
  __n63["init"] := __n65;
  __n62 := [ __n63 ];
  __n61["declarations"] := __n62;
  __n61["kind"] := "var";
  __n68 := {  };
  __n68["type"] := "ExpressionStatement";
  __n69 := {  };
  __n69["type"] := "Identifier";
  __n69["name"] := "g";
  __n68["expression"] := __n69;
  __n70 := {  };
  __n70["type"] := "ReturnStatement";
  __n71 := {  };
  __n71["type"] := "CallExpression";
  __n72 := {  };
  __n72["type"] := "Identifier";
  __n72["name"] := "g";
  __n71["callee"] := __n72;
  __n71["is_tail_call"] := true;
  __n74 := {  };
  __n74["type"] := "Identifier";
  __n74["name"] := "z";
  __n73 := [ __n74 ];
  __n71["arguments"] := __n73;
  __n70["argument"] := __n71;
  __n60 := [ __n61, __n68, __n70 ];
  __n59["body"] := __n60;
  __n59["isSimpleParameterList"] := true;
  __n75 := [ "z" ];
  __n59["variableDeclarations"] := __n75;
  __n77 := {  };
  __n77["type"] := "FunctionDeclaration";
  __n78 := {  };
  __n78["type"] := "Identifier";
  __n78["name"] := "g";
  __n77["id"] := __n78;
  __n79 := [ "x" ];
  __n77["params"] := __n79;
  __n80 := {  };
  __n80["type"] := "BlockStatement";
  __n82 := {  };
  __n82["type"] := "VariableDeclaration";
  __n84 := {  };
  __n84["type"] := "VariableDeclarator";
  __n85 := {  };
  __n85["type"] := "Identifier";
  __n85["name"] := "g1";
  __n84["id"] := __n85;
  __n84["init"] := null;
  __n83 := [ __n84 ];
  __n82["declarations"] := __n83;
  __n82["kind"] := "var";
  __n86 := {  };
  __n86["type"] := "ReturnStatement";
  __n87 := {  };
  __n87["type"] := "BinaryExpression";
  __n87["operator"] := "+";
  __n88 := {  };
  __n88["type"] := "CallExpression";
  __n89 := {  };
  __n89["type"] := "CallExpression";
  __n90 := {  };
  __n90["type"] := "Identifier";
  __n90["name"] := "multiplication";
  __n89["callee"] := __n90;
  __n89["is_tail_call"] := 'undefined;
  __n92 := {  };
  __n92["type"] := "Literal";
  __n92["value"] := 5.;
  __n92["raw"] := "5";
  __n91 := [ __n92 ];
  __n89["arguments"] := __n91;
  __n88["callee"] := __n89;
  __n88["is_tail_call"] := 'undefined;
  __n94 := {  };
  __n94["type"] := "Identifier";
  __n94["name"] := "x";
  __n93 := [ __n94 ];
  __n88["arguments"] := __n93;
  __n87["left"] := __n88;
  __n95 := {  };
  __n95["type"] := "Identifier";
  __n95["name"] := "y";
  __n87["right"] := __n95;
  __n86["argument"] := __n87;
  __n81 := [ __n82, __n86 ];
  __n80["body"] := __n81;
  __n80["isSimpleParameterList"] := true;
  __n96 := [ "g1" ];
  __n80["variableDeclarations"] := __n96;
  __n97 := [  ];
  __n80["functionDeclarations"] := __n97;
  __n98 := [  ];
  __n80["letDeclarations"] := __n98;
  __n99 := [  ];
  __n80["constDeclarations"] := __n99;
  __n80["containsExpression"] := false;
  __n101 := {  };
  __n101["type"] := "Identifier";
  __n101["name"] := "x";
  __n100 := [ __n101 ];
  __n80["paramsDetails"] := __n100;
  __n102 := [ "x" ];
  __n80["paramsNames"] := __n102;
  __n80["codeType"] := "function";
  __n80["strict"] := false;
  __n77["body"] := __n80;
  __n77["generator"] := false;
  __n77["async"] := false;
  __n77["expression"] := false;
  __n76 := [ __n77 ];
  __n59["functionDeclarations"] := __n76;
  __n103 := [  ];
  __n59["letDeclarations"] := __n103;
  __n104 := [  ];
  __n59["constDeclarations"] := __n104;
  __n59["containsExpression"] := false;
  __n106 := {  };
  __n106["type"] := "Identifier";
  __n106["name"] := "x";
  __n107 := {  };
  __n107["type"] := "Identifier";
  __n107["name"] := "y";
  __n105 := [ __n106, __n107 ];
  __n59["paramsDetails"] := __n105;
  __n108 := [ "x", "y" ];
  __n59["paramsNames"] := __n108;
  __n59["codeType"] := "function";
  __n59["strict"] := false;
  __n56["body"] := __n59;
  __n56["generator"] := false;
  __n56["async"] := false;
  __n56["expression"] := false;
  __n55 := [ __n56 ];
  __n0["functionDeclarations"] := __n55;
  __n109 := [  ];
  __n0["letDeclarations"] := __n109;
  __n110 := [  ];
  __n0["constDeclarations"] := __n110;
  __n0["codeType"] := "global";
  __n0["strict"] := false;
  return __n0
  }
