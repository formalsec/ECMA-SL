Test input.switch.js:
  $ js2esl input.switch.js
  function buildAST () {
  __n0 := {  };
  __n0["type"] := "Program";
  __n0["sourceType"] := "script";
  __n2 := {  };
  __n2["type"] := "ExpressionStatement";
  __n3 := {  };
  __n3["type"] := "AssignmentExpression";
  __n3["operator"] := "=";
  __n4 := {  };
  __n4["type"] := "Identifier";
  __n4["name"] := "a";
  __n3["left"] := __n4;
  __n5 := {  };
  __n5["type"] := "Literal";
  __n5["value"] := "aa";
  __n5["raw"] := "\"aa\"";
  __n3["right"] := __n5;
  __n2["expression"] := __n3;
  __n6 := {  };
  __n6["type"] := "SwitchStatement";
  __n7 := {  };
  __n7["type"] := "Identifier";
  __n7["name"] := "a";
  __n6["discriminant"] := __n7;
  __n10 := {  };
  __n10["type"] := "SwitchCase";
  __n11 := {  };
  __n11["type"] := "Literal";
  __n11["value"] := "aa";
  __n11["raw"] := "\"aa\"";
  __n10["test"] := __n11;
  __n13 := {  };
  __n13["type"] := "ExpressionStatement";
  __n14 := {  };
  __n14["type"] := "AssignmentExpression";
  __n14["operator"] := "=";
  __n15 := {  };
  __n15["type"] := "Identifier";
  __n15["name"] := "a1";
  __n14["left"] := __n15;
  __n16 := {  };
  __n16["type"] := "Literal";
  __n16["value"] := "Correct!";
  __n16["raw"] := "\"Correct!\"";
  __n14["right"] := __n16;
  __n13["expression"] := __n14;
  __n17 := {  };
  __n17["type"] := "BreakStatement";
  __n17["label"] := null;
  __n12 := [ __n13, __n17 ];
  __n10["consequent"] := __n12;
  __n9 := [ __n10 ];
  __n18 := {  };
  __n18["type"] := "SwitchCase";
  __n18["test"] := null;
  __n20 := {  };
  __n20["type"] := "ExpressionStatement";
  __n21 := {  };
  __n21["type"] := "AssignmentExpression";
  __n21["operator"] := "=";
  __n22 := {  };
  __n22["type"] := "Identifier";
  __n22["name"] := "a1";
  __n21["left"] := __n22;
  __n23 := {  };
  __n23["type"] := "Literal";
  __n23["value"] := "Incorrect!";
  __n23["raw"] := "\"Incorrect!\"";
  __n21["right"] := __n23;
  __n20["expression"] := __n21;
  __n19 := [ __n20 ];
  __n18["consequent"] := __n19;
  __n25 := {  };
  __n25["type"] := "SwitchCase";
  __n26 := {  };
  __n26["type"] := "Literal";
  __n26["value"] := "ab";
  __n26["raw"] := "\"ab\"";
  __n25["test"] := __n26;
  __n28 := {  };
  __n28["type"] := "ExpressionStatement";
  __n29 := {  };
  __n29["type"] := "AssignmentExpression";
  __n29["operator"] := "=";
  __n30 := {  };
  __n30["type"] := "Identifier";
  __n30["name"] := "a1";
  __n29["left"] := __n30;
  __n31 := {  };
  __n31["type"] := "Literal";
  __n31["value"] := "Almost!";
  __n31["raw"] := "\"Almost!\"";
  __n29["right"] := __n31;
  __n28["expression"] := __n29;
  __n32 := {  };
  __n32["type"] := "BreakStatement";
  __n32["label"] := null;
  __n27 := [ __n28, __n32 ];
  __n25["consequent"] := __n27;
  __n24 := [ __n25 ];
  __n8 := [ __n9, __n18, __n24 ];
  __n6["cases"] := __n8;
  __n33 := [  ];
  __n6["letDeclarations"] := __n33;
  __n34 := [  ];
  __n6["constDeclarations"] := __n34;
  __n35 := {  };
  __n35["type"] := "SwitchStatement";
  __n36 := {  };
  __n36["type"] := "Identifier";
  __n36["name"] := "a";
  __n35["discriminant"] := __n36;
  __n39 := {  };
  __n39["type"] := "SwitchCase";
  __n40 := {  };
  __n40["type"] := "Literal";
  __n40["value"] := "aa";
  __n40["raw"] := "\"aa\"";
  __n39["test"] := __n40;
  __n42 := {  };
  __n42["type"] := "ExpressionStatement";
  __n43 := {  };
  __n43["type"] := "AssignmentExpression";
  __n43["operator"] := "=";
  __n44 := {  };
  __n44["type"] := "Identifier";
  __n44["name"] := "a2";
  __n43["left"] := __n44;
  __n45 := {  };
  __n45["type"] := "Literal";
  __n45["value"] := "Incorrect!";
  __n45["raw"] := "\"Incorrect!\"";
  __n43["right"] := __n45;
  __n42["expression"] := __n43;
  __n41 := [ __n42 ];
  __n39["consequent"] := __n41;
  __n38 := [ __n39 ];
  __n46 := {  };
  __n46["type"] := "SwitchCase";
  __n46["test"] := null;
  __n48 := {  };
  __n48["type"] := "ExpressionStatement";
  __n49 := {  };
  __n49["type"] := "AssignmentExpression";
  __n49["operator"] := "=";
  __n50 := {  };
  __n50["type"] := "Identifier";
  __n50["name"] := "a2";
  __n49["left"] := __n50;
  __n51 := {  };
  __n51["type"] := "Literal";
  __n51["value"] := "Almost!";
  __n51["raw"] := "\"Almost!\"";
  __n49["right"] := __n51;
  __n48["expression"] := __n49;
  __n47 := [ __n48 ];
  __n46["consequent"] := __n47;
  __n53 := {  };
  __n53["type"] := "SwitchCase";
  __n54 := {  };
  __n54["type"] := "Literal";
  __n54["value"] := "ab";
  __n54["raw"] := "\"ab\"";
  __n53["test"] := __n54;
  __n56 := {  };
  __n56["type"] := "ExpressionStatement";
  __n57 := {  };
  __n57["type"] := "AssignmentExpression";
  __n57["operator"] := "=";
  __n58 := {  };
  __n58["type"] := "Identifier";
  __n58["name"] := "a2";
  __n57["left"] := __n58;
  __n59 := {  };
  __n59["type"] := "Literal";
  __n59["value"] := "Correct!";
  __n59["raw"] := "\"Correct!\"";
  __n57["right"] := __n59;
  __n56["expression"] := __n57;
  __n60 := {  };
  __n60["type"] := "BreakStatement";
  __n60["label"] := null;
  __n55 := [ __n56, __n60 ];
  __n53["consequent"] := __n55;
  __n52 := [ __n53 ];
  __n37 := [ __n38, __n46, __n52 ];
  __n35["cases"] := __n37;
  __n61 := [  ];
  __n35["letDeclarations"] := __n61;
  __n62 := [  ];
  __n35["constDeclarations"] := __n62;
  __n63 := {  };
  __n63["type"] := "ExpressionStatement";
  __n64 := {  };
  __n64["type"] := "AssignmentExpression";
  __n64["operator"] := "=";
  __n65 := {  };
  __n65["type"] := "Identifier";
  __n65["name"] := "ab";
  __n64["left"] := __n65;
  __n66 := {  };
  __n66["type"] := "Literal";
  __n66["value"] := "ab";
  __n66["raw"] := "\"ab\"";
  __n64["right"] := __n66;
  __n63["expression"] := __n64;
  __n67 := {  };
  __n67["type"] := "SwitchStatement";
  __n68 := {  };
  __n68["type"] := "Identifier";
  __n68["name"] := "ab";
  __n67["discriminant"] := __n68;
  __n71 := {  };
  __n71["type"] := "SwitchCase";
  __n72 := {  };
  __n72["type"] := "Literal";
  __n72["value"] := "aa";
  __n72["raw"] := "\"aa\"";
  __n71["test"] := __n72;
  __n74 := {  };
  __n74["type"] := "ExpressionStatement";
  __n75 := {  };
  __n75["type"] := "AssignmentExpression";
  __n75["operator"] := "=";
  __n76 := {  };
  __n76["type"] := "Identifier";
  __n76["name"] := "ab1";
  __n75["left"] := __n76;
  __n77 := {  };
  __n77["type"] := "Literal";
  __n77["value"] := "Incorrect!";
  __n77["raw"] := "\"Incorrect!\"";
  __n75["right"] := __n77;
  __n74["expression"] := __n75;
  __n73 := [ __n74 ];
  __n71["consequent"] := __n73;
  __n70 := [ __n71 ];
  __n78 := {  };
  __n78["type"] := "SwitchCase";
  __n78["test"] := null;
  __n80 := {  };
  __n80["type"] := "ExpressionStatement";
  __n81 := {  };
  __n81["type"] := "AssignmentExpression";
  __n81["operator"] := "=";
  __n82 := {  };
  __n82["type"] := "Identifier";
  __n82["name"] := "ab1";
  __n81["left"] := __n82;
  __n83 := {  };
  __n83["type"] := "Literal";
  __n83["value"] := "Incorrect!";
  __n83["raw"] := "\"Incorrect!\"";
  __n81["right"] := __n83;
  __n80["expression"] := __n81;
  __n79 := [ __n80 ];
  __n78["consequent"] := __n79;
  __n85 := {  };
  __n85["type"] := "SwitchCase";
  __n86 := {  };
  __n86["type"] := "Literal";
  __n86["value"] := "ab";
  __n86["raw"] := "\"ab\"";
  __n85["test"] := __n86;
  __n88 := {  };
  __n88["type"] := "ExpressionStatement";
  __n89 := {  };
  __n89["type"] := "AssignmentExpression";
  __n89["operator"] := "=";
  __n90 := {  };
  __n90["type"] := "Identifier";
  __n90["name"] := "ab1";
  __n89["left"] := __n90;
  __n91 := {  };
  __n91["type"] := "Literal";
  __n91["value"] := "Correct!";
  __n91["raw"] := "\"Correct!\"";
  __n89["right"] := __n91;
  __n88["expression"] := __n89;
  __n92 := {  };
  __n92["type"] := "BreakStatement";
  __n92["label"] := null;
  __n87 := [ __n88, __n92 ];
  __n85["consequent"] := __n87;
  __n84 := [ __n85 ];
  __n69 := [ __n70, __n78, __n84 ];
  __n67["cases"] := __n69;
  __n93 := [  ];
  __n67["letDeclarations"] := __n93;
  __n94 := [  ];
  __n67["constDeclarations"] := __n94;
  __n95 := {  };
  __n95["type"] := "ExpressionStatement";
  __n96 := {  };
  __n96["type"] := "AssignmentExpression";
  __n96["operator"] := "=";
  __n97 := {  };
  __n97["type"] := "Identifier";
  __n97["name"] := "ac";
  __n96["left"] := __n97;
  __n98 := {  };
  __n98["type"] := "Literal";
  __n98["value"] := "ac";
  __n98["raw"] := "\"ac\"";
  __n96["right"] := __n98;
  __n95["expression"] := __n96;
  __n99 := {  };
  __n99["type"] := "SwitchStatement";
  __n100 := {  };
  __n100["type"] := "Identifier";
  __n100["name"] := "ac";
  __n99["discriminant"] := __n100;
  __n103 := {  };
  __n103["type"] := "SwitchCase";
  __n104 := {  };
  __n104["type"] := "Literal";
  __n104["value"] := "aa";
  __n104["raw"] := "\"aa\"";
  __n103["test"] := __n104;
  __n106 := {  };
  __n106["type"] := "ExpressionStatement";
  __n107 := {  };
  __n107["type"] := "AssignmentExpression";
  __n107["operator"] := "=";
  __n108 := {  };
  __n108["type"] := "Identifier";
  __n108["name"] := "ac1";
  __n107["left"] := __n108;
  __n109 := {  };
  __n109["type"] := "Literal";
  __n109["value"] := "Incorrect!";
  __n109["raw"] := "\"Incorrect!\"";
  __n107["right"] := __n109;
  __n106["expression"] := __n107;
  __n105 := [ __n106 ];
  __n103["consequent"] := __n105;
  __n102 := [ __n103 ];
  __n110 := {  };
  __n110["type"] := "SwitchCase";
  __n110["test"] := null;
  __n112 := {  };
  __n112["type"] := "ExpressionStatement";
  __n113 := {  };
  __n113["type"] := "AssignmentExpression";
  __n113["operator"] := "=";
  __n114 := {  };
  __n114["type"] := "Identifier";
  __n114["name"] := "ac1";
  __n113["left"] := __n114;
  __n115 := {  };
  __n115["type"] := "Literal";
  __n115["value"] := "Incorrect!";
  __n115["raw"] := "\"Incorrect!\"";
  __n113["right"] := __n115;
  __n112["expression"] := __n113;
  __n111 := [ __n112 ];
  __n110["consequent"] := __n111;
  __n117 := {  };
  __n117["type"] := "SwitchCase";
  __n118 := {  };
  __n118["type"] := "Literal";
  __n118["value"] := "ac";
  __n118["raw"] := "\"ac\"";
  __n117["test"] := __n118;
  __n120 := {  };
  __n120["type"] := "ExpressionStatement";
  __n121 := {  };
  __n121["type"] := "AssignmentExpression";
  __n121["operator"] := "=";
  __n122 := {  };
  __n122["type"] := "Identifier";
  __n122["name"] := "ac1";
  __n121["left"] := __n122;
  __n123 := {  };
  __n123["type"] := "Literal";
  __n123["value"] := "Almost!";
  __n123["raw"] := "\"Almost!\"";
  __n121["right"] := __n123;
  __n120["expression"] := __n121;
  __n119 := [ __n120 ];
  __n117["consequent"] := __n119;
  __n124 := {  };
  __n124["type"] := "SwitchCase";
  __n125 := {  };
  __n125["type"] := "Literal";
  __n125["value"] := "ab";
  __n125["raw"] := "\"ab\"";
  __n124["test"] := __n125;
  __n127 := {  };
  __n127["type"] := "ExpressionStatement";
  __n128 := {  };
  __n128["type"] := "AssignmentExpression";
  __n128["operator"] := "=";
  __n129 := {  };
  __n129["type"] := "Identifier";
  __n129["name"] := "ac1";
  __n128["left"] := __n129;
  __n130 := {  };
  __n130["type"] := "Literal";
  __n130["value"] := "Correct!";
  __n130["raw"] := "\"Correct!\"";
  __n128["right"] := __n130;
  __n127["expression"] := __n128;
  __n126 := [ __n127 ];
  __n124["consequent"] := __n126;
  __n116 := [ __n117, __n124 ];
  __n101 := [ __n102, __n110, __n116 ];
  __n99["cases"] := __n101;
  __n131 := [  ];
  __n99["letDeclarations"] := __n131;
  __n132 := [  ];
  __n99["constDeclarations"] := __n132;
  __n133 := {  };
  __n133["type"] := "ExpressionStatement";
  __n134 := {  };
  __n134["type"] := "AssignmentExpression";
  __n134["operator"] := "=";
  __n135 := {  };
  __n135["type"] := "Identifier";
  __n135["name"] := "b";
  __n134["left"] := __n135;
  __n136 := {  };
  __n136["type"] := "Literal";
  __n136["value"] := "bb";
  __n136["raw"] := "\"bb\"";
  __n134["right"] := __n136;
  __n133["expression"] := __n134;
  __n137 := {  };
  __n137["type"] := "SwitchStatement";
  __n138 := {  };
  __n138["type"] := "Identifier";
  __n138["name"] := "b";
  __n137["discriminant"] := __n138;
  __n141 := {  };
  __n141["type"] := "SwitchCase";
  __n142 := {  };
  __n142["type"] := "Literal";
  __n142["value"] := "bb";
  __n142["raw"] := "\"bb\"";
  __n141["test"] := __n142;
  __n144 := {  };
  __n144["type"] := "ExpressionStatement";
  __n145 := {  };
  __n145["type"] := "AssignmentExpression";
  __n145["operator"] := "=";
  __n146 := {  };
  __n146["type"] := "Identifier";
  __n146["name"] := "b1";
  __n145["left"] := __n146;
  __n147 := {  };
  __n147["type"] := "Literal";
  __n147["value"] := "Incorrect!";
  __n147["raw"] := "\"Incorrect!\"";
  __n145["right"] := __n147;
  __n144["expression"] := __n145;
  __n143 := [ __n144 ];
  __n141["consequent"] := __n143;
  __n148 := {  };
  __n148["type"] := "SwitchCase";
  __n149 := {  };
  __n149["type"] := "Literal";
  __n149["value"] := "bbb";
  __n149["raw"] := "\"bbb\"";
  __n148["test"] := __n149;
  __n151 := {  };
  __n151["type"] := "ExpressionStatement";
  __n152 := {  };
  __n152["type"] := "AssignmentExpression";
  __n152["operator"] := "=";
  __n153 := {  };
  __n153["type"] := "Identifier";
  __n153["name"] := "b1";
  __n152["left"] := __n153;
  __n154 := {  };
  __n154["type"] := "Literal";
  __n154["value"] := "Correct!";
  __n154["raw"] := "\"Correct!\"";
  __n152["right"] := __n154;
  __n151["expression"] := __n152;
  __n150 := [ __n151 ];
  __n148["consequent"] := __n150;
  __n140 := [ __n141, __n148 ];
  __n155 := [  ];
  __n139 := [ __n140, null, __n155 ];
  __n137["cases"] := __n139;
  __n156 := [  ];
  __n137["letDeclarations"] := __n156;
  __n157 := [  ];
  __n137["constDeclarations"] := __n157;
  __n158 := {  };
  __n158["type"] := "ExpressionStatement";
  __n159 := {  };
  __n159["type"] := "AssignmentExpression";
  __n159["operator"] := "=";
  __n160 := {  };
  __n160["type"] := "Identifier";
  __n160["name"] := "c";
  __n159["left"] := __n160;
  __n161 := {  };
  __n161["type"] := "Literal";
  __n161["value"] := "cc";
  __n161["raw"] := "\"cc\"";
  __n159["right"] := __n161;
  __n158["expression"] := __n159;
  __n162 := {  };
  __n162["type"] := "ExpressionStatement";
  __n163 := {  };
  __n163["type"] := "AssignmentExpression";
  __n163["operator"] := "=";
  __n164 := {  };
  __n164["type"] := "Identifier";
  __n164["name"] := "c1";
  __n163["left"] := __n164;
  __n165 := {  };
  __n165["type"] := "Literal";
  __n165["value"] := "Incorrect!";
  __n165["raw"] := "\"Incorrect!\"";
  __n163["right"] := __n165;
  __n162["expression"] := __n163;
  __n166 := {  };
  __n166["type"] := "SwitchStatement";
  __n167 := {  };
  __n167["type"] := "Identifier";
  __n167["name"] := "c";
  __n166["discriminant"] := __n167;
  __n169 := [  ];
  __n170 := {  };
  __n170["type"] := "SwitchCase";
  __n170["test"] := null;
  __n172 := {  };
  __n172["type"] := "ExpressionStatement";
  __n173 := {  };
  __n173["type"] := "AssignmentExpression";
  __n173["operator"] := "=";
  __n174 := {  };
  __n174["type"] := "Identifier";
  __n174["name"] := "c1";
  __n173["left"] := __n174;
  __n175 := {  };
  __n175["type"] := "Literal";
  __n175["value"] := "Correct!";
  __n175["raw"] := "\"Correct!\"";
  __n173["right"] := __n175;
  __n172["expression"] := __n173;
  __n171 := [ __n172 ];
  __n170["consequent"] := __n171;
  __n176 := [  ];
  __n168 := [ __n169, __n170, __n176 ];
  __n166["cases"] := __n168;
  __n177 := [  ];
  __n166["letDeclarations"] := __n177;
  __n178 := [  ];
  __n166["constDeclarations"] := __n178;
  __n179 := {  };
  __n179["type"] := "ExpressionStatement";
  __n180 := {  };
  __n180["type"] := "AssignmentExpression";
  __n180["operator"] := "=";
  __n181 := {  };
  __n181["type"] := "Identifier";
  __n181["name"] := "d";
  __n180["left"] := __n181;
  __n182 := {  };
  __n182["type"] := "Literal";
  __n182["value"] := "dd";
  __n182["raw"] := "\"dd\"";
  __n180["right"] := __n182;
  __n179["expression"] := __n180;
  __n183 := {  };
  __n183["type"] := "SwitchStatement";
  __n184 := {  };
  __n184["type"] := "Identifier";
  __n184["name"] := "d";
  __n183["discriminant"] := __n184;
  __n186 := [  ];
  __n187 := [  ];
  __n185 := [ __n186, null, __n187 ];
  __n183["cases"] := __n185;
  __n188 := [  ];
  __n183["letDeclarations"] := __n188;
  __n189 := [  ];
  __n183["constDeclarations"] := __n189;
  __n190 := {  };
  __n190["type"] := "ExpressionStatement";
  __n191 := {  };
  __n191["type"] := "AssignmentExpression";
  __n191["operator"] := "=";
  __n192 := {  };
  __n192["type"] := "Identifier";
  __n192["name"] := "d1";
  __n191["left"] := __n192;
  __n193 := {  };
  __n193["type"] := "Literal";
  __n193["value"] := "Correct!";
  __n193["raw"] := "\"Correct!\"";
  __n191["right"] := __n193;
  __n190["expression"] := __n191;
  __n1 := [ __n2, __n6, __n35, __n63, __n67, __n95, __n99, __n133, __n137, __n158, __n162, __n166, __n179, __n183, __n190 ];
  __n0["body"] := __n1;
  __n194 := [  ];
  __n0["variableDeclarations"] := __n194;
  __n195 := [  ];
  __n0["functionDeclarations"] := __n195;
  __n196 := [  ];
  __n0["letDeclarations"] := __n196;
  __n197 := [  ];
  __n0["constDeclarations"] := __n197;
  __n0["codeType"] := "global";
  __n0["strict"] := false;
  return __n0
  }
