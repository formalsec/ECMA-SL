Test forin_loop.js:
  $ js2esl forin_loop.js
  function buildAST () {
  __n0 := {  };
  __n0["type"] := "Program";
  __n0["sourceType"] := "script";
  __n2 := {  };
  __n2["type"] := "ExpressionStatement";
  __n3 := {  };
  __n3["type"] := "AssignmentExpression";
  __n3["operator"] := "=";
  __n4 := {  };
  __n4["type"] := "Identifier";
  __n4["name"] := "o1";
  __n3["left"] := __n4;
  __n5 := {  };
  __n5["type"] := "ObjectExpression";
  __n7 := {  };
  __n7["type"] := "Property";
  __n8 := {  };
  __n8["type"] := "Identifier";
  __n8["name"] := "a";
  __n7["key"] := __n8;
  __n9 := {  };
  __n9["type"] := "Literal";
  __n9["value"] := 1.;
  __n9["raw"] := "1";
  __n7["value"] := __n9;
  __n7["computed"] := false;
  __n7["kind"] := "init";
  __n7["shorthand"] := false;
  __n7["method"] := false;
  __n10 := {  };
  __n10["type"] := "Property";
  __n11 := {  };
  __n11["type"] := "Identifier";
  __n11["name"] := "b";
  __n10["key"] := __n11;
  __n12 := {  };
  __n12["type"] := "Literal";
  __n12["value"] := 2.;
  __n12["raw"] := "2";
  __n10["value"] := __n12;
  __n10["computed"] := false;
  __n10["kind"] := "init";
  __n10["shorthand"] := false;
  __n10["method"] := false;
  __n6 := [ __n7, __n10 ];
  __n5["properties"] := __n6;
  __n3["right"] := __n5;
  __n2["expression"] := __n3;
  __n13 := {  };
  __n13["type"] := "ExpressionStatement";
  __n14 := {  };
  __n14["type"] := "AssignmentExpression";
  __n14["operator"] := "=";
  __n15 := {  };
  __n15["type"] := "Identifier";
  __n15["name"] := "o2";
  __n14["left"] := __n15;
  __n16 := {  };
  __n16["type"] := "ObjectExpression";
  __n18 := {  };
  __n18["type"] := "Property";
  __n19 := {  };
  __n19["type"] := "Identifier";
  __n19["name"] := "c";
  __n18["key"] := __n19;
  __n20 := {  };
  __n20["type"] := "Literal";
  __n20["value"] := 3.;
  __n20["raw"] := "3";
  __n18["value"] := __n20;
  __n18["computed"] := false;
  __n18["kind"] := "init";
  __n18["shorthand"] := false;
  __n18["method"] := false;
  __n21 := {  };
  __n21["type"] := "Property";
  __n22 := {  };
  __n22["type"] := "Identifier";
  __n22["name"] := "d";
  __n21["key"] := __n22;
  __n23 := {  };
  __n23["type"] := "Literal";
  __n23["value"] := 4.;
  __n23["raw"] := "4";
  __n21["value"] := __n23;
  __n21["computed"] := false;
  __n21["kind"] := "init";
  __n21["shorthand"] := false;
  __n21["method"] := false;
  __n24 := {  };
  __n24["type"] := "Property";
  __n25 := {  };
  __n25["type"] := "Identifier";
  __n25["name"] := "e";
  __n24["key"] := __n25;
  __n26 := {  };
  __n26["type"] := "Literal";
  __n26["value"] := 5.;
  __n26["raw"] := "5";
  __n24["value"] := __n26;
  __n24["computed"] := false;
  __n24["kind"] := "init";
  __n24["shorthand"] := false;
  __n24["method"] := false;
  __n17 := [ __n18, __n21, __n24 ];
  __n16["properties"] := __n17;
  __n14["right"] := __n16;
  __n13["expression"] := __n14;
  __n27 := {  };
  __n27["type"] := "ExpressionStatement";
  __n28 := {  };
  __n28["type"] := "AssignmentExpression";
  __n28["operator"] := "=";
  __n29 := {  };
  __n29["type"] := "Identifier";
  __n29["name"] := "o3";
  __n28["left"] := __n29;
  __n30 := {  };
  __n30["type"] := "ObjectExpression";
  __n32 := {  };
  __n32["type"] := "Property";
  __n33 := {  };
  __n33["type"] := "Identifier";
  __n33["name"] := "a";
  __n32["key"] := __n33;
  __n34 := {  };
  __n34["type"] := "Literal";
  __n34["value"] := 2.;
  __n34["raw"] := "2";
  __n32["value"] := __n34;
  __n32["computed"] := false;
  __n32["kind"] := "init";
  __n32["shorthand"] := false;
  __n32["method"] := false;
  __n35 := {  };
  __n35["type"] := "Property";
  __n36 := {  };
  __n36["type"] := "Identifier";
  __n36["name"] := "c";
  __n35["key"] := __n36;
  __n37 := {  };
  __n37["type"] := "Literal";
  __n37["value"] := 4.;
  __n37["raw"] := "4";
  __n35["value"] := __n37;
  __n35["computed"] := false;
  __n35["kind"] := "init";
  __n35["shorthand"] := false;
  __n35["method"] := false;
  __n31 := [ __n32, __n35 ];
  __n30["properties"] := __n31;
  __n28["right"] := __n30;
  __n27["expression"] := __n28;
  __n38 := {  };
  __n38["type"] := "ExpressionStatement";
  __n39 := {  };
  __n39["type"] := "AssignmentExpression";
  __n39["operator"] := "=";
  __n40 := {  };
  __n40["type"] := "MemberExpression";
  __n40["computed"] := true;
  __n41 := {  };
  __n41["type"] := "Identifier";
  __n41["name"] := "o2";
  __n40["object"] := __n41;
  __n42 := {  };
  __n42["type"] := "Literal";
  __n42["value"] := "__proto__";
  __n42["raw"] := "\"__proto__\"";
  __n40["property"] := __n42;
  __n39["left"] := __n40;
  __n43 := {  };
  __n43["type"] := "Identifier";
  __n43["name"] := "o1";
  __n39["right"] := __n43;
  __n38["expression"] := __n39;
  __n44 := {  };
  __n44["type"] := "ExpressionStatement";
  __n45 := {  };
  __n45["type"] := "AssignmentExpression";
  __n45["operator"] := "=";
  __n46 := {  };
  __n46["type"] := "MemberExpression";
  __n46["computed"] := true;
  __n47 := {  };
  __n47["type"] := "Identifier";
  __n47["name"] := "o3";
  __n46["object"] := __n47;
  __n48 := {  };
  __n48["type"] := "Literal";
  __n48["value"] := "__proto__";
  __n48["raw"] := "\"__proto__\"";
  __n46["property"] := __n48;
  __n45["left"] := __n46;
  __n49 := {  };
  __n49["type"] := "Identifier";
  __n49["name"] := "o2";
  __n45["right"] := __n49;
  __n44["expression"] := __n45;
  __n50 := {  };
  __n50["type"] := "ExpressionStatement";
  __n51 := {  };
  __n51["type"] := "AssignmentExpression";
  __n51["operator"] := "=";
  __n52 := {  };
  __n52["type"] := "Identifier";
  __n52["name"] := "a1";
  __n51["left"] := __n52;
  __n53 := {  };
  __n53["type"] := "Literal";
  __n53["value"] := 0.;
  __n53["raw"] := "0";
  __n51["right"] := __n53;
  __n50["expression"] := __n51;
  __n54 := {  };
  __n54["type"] := "ForInStatement";
  __n55 := {  };
  __n55["type"] := "VariableDeclarator";
  __n56 := {  };
  __n56["type"] := "Identifier";
  __n56["name"] := "x";
  __n55["id"] := __n56;
  __n55["init"] := null;
  __n55["kind"] := "var";
  __n54["left"] := __n55;
  __n57 := {  };
  __n57["type"] := "Identifier";
  __n57["name"] := "o2";
  __n54["right"] := __n57;
  __n58 := {  };
  __n58["type"] := "BlockStatement";
  __n60 := {  };
  __n60["type"] := "ExpressionStatement";
  __n61 := {  };
  __n61["type"] := "AssignmentExpression";
  __n61["operator"] := "=";
  __n62 := {  };
  __n62["type"] := "Identifier";
  __n62["name"] := "a1";
  __n61["left"] := __n62;
  __n63 := {  };
  __n63["type"] := "BinaryExpression";
  __n63["operator"] := "+";
  __n64 := {  };
  __n64["type"] := "Identifier";
  __n64["name"] := "a1";
  __n63["left"] := __n64;
  __n65 := {  };
  __n65["type"] := "MemberExpression";
  __n65["computed"] := true;
  __n66 := {  };
  __n66["type"] := "Identifier";
  __n66["name"] := "o2";
  __n65["object"] := __n66;
  __n67 := {  };
  __n67["type"] := "Identifier";
  __n67["name"] := "x";
  __n65["property"] := __n67;
  __n63["right"] := __n65;
  __n61["right"] := __n63;
  __n60["expression"] := __n61;
  __n59 := [ __n60 ];
  __n58["body"] := __n59;
  __n68 := [  ];
  __n58["letDeclarations"] := __n68;
  __n69 := [  ];
  __n58["constDeclarations"] := __n69;
  __n54["body"] := __n58;
  __n54["each"] := false;
  __n70 := {  };
  __n70["type"] := "ExpressionStatement";
  __n71 := {  };
  __n71["type"] := "AssignmentExpression";
  __n71["operator"] := "=";
  __n72 := {  };
  __n72["type"] := "Identifier";
  __n72["name"] := "a2";
  __n71["left"] := __n72;
  __n73 := {  };
  __n73["type"] := "Literal";
  __n73["value"] := 0.;
  __n73["raw"] := "0";
  __n71["right"] := __n73;
  __n70["expression"] := __n71;
  __n74 := {  };
  __n74["type"] := "ForInStatement";
  __n75 := {  };
  __n75["type"] := "Identifier";
  __n75["name"] := "y";
  __n74["left"] := __n75;
  __n76 := {  };
  __n76["type"] := "Identifier";
  __n76["name"] := "o3";
  __n74["right"] := __n76;
  __n77 := {  };
  __n77["type"] := "BlockStatement";
  __n79 := {  };
  __n79["type"] := "ExpressionStatement";
  __n80 := {  };
  __n80["type"] := "AssignmentExpression";
  __n80["operator"] := "=";
  __n81 := {  };
  __n81["type"] := "Identifier";
  __n81["name"] := "a2";
  __n80["left"] := __n81;
  __n82 := {  };
  __n82["type"] := "BinaryExpression";
  __n82["operator"] := "+";
  __n83 := {  };
  __n83["type"] := "Identifier";
  __n83["name"] := "a2";
  __n82["left"] := __n83;
  __n84 := {  };
  __n84["type"] := "MemberExpression";
  __n84["computed"] := true;
  __n85 := {  };
  __n85["type"] := "Identifier";
  __n85["name"] := "o3";
  __n84["object"] := __n85;
  __n86 := {  };
  __n86["type"] := "Identifier";
  __n86["name"] := "y";
  __n84["property"] := __n86;
  __n82["right"] := __n84;
  __n80["right"] := __n82;
  __n79["expression"] := __n80;
  __n78 := [ __n79 ];
  __n77["body"] := __n78;
  __n87 := [  ];
  __n77["letDeclarations"] := __n87;
  __n88 := [  ];
  __n77["constDeclarations"] := __n88;
  __n74["body"] := __n77;
  __n74["each"] := false;
  __n1 := [ __n2, __n13, __n27, __n38, __n44, __n50, __n54, __n70, __n74 ];
  __n0["body"] := __n1;
  __n89 := [ "x" ];
  __n0["variableDeclarations"] := __n89;
  __n90 := [  ];
  __n0["functionDeclarations"] := __n90;
  __n91 := [  ];
  __n0["letDeclarations"] := __n91;
  __n92 := [  ];
  __n0["constDeclarations"] := __n92;
  __n0["codeType"] := "global";
  __n0["strict"] := false;
  return __n0
  }
