(include_subdirs unqualified)

(library
 (public_name ecma-sl)
 (name ecma_sl)
 (modules
  ;  general
  config
  ;  utils
  common
  io
  log
  err
  fmt
  font
  counter
  syntax
  arith_utils
  byte_utils
  date_utils
  parsing_utils
  parsing_heap_utils
  parsing_number_utils
  string_utils
  time_utils
  ;   syntax (share)
  val
  loc
  type
  object
  operator
  source
  ;   syntax (core)
  expr
  stmt
  func
  prog
  lexer
  parser
  ;   syntax (extended)
  eExpr
  eStmt
  eFunc
  eProg
  eType
  ePat
  eMacro
  eLexer
  eParser
  ;   error
  Eslerr
  Eslerr_type
  Eslerr_token
  Eslerr_fmt
  ;   semantics (domains)
  store
  heap
  call_stack
  ;   semantics (core)
  interpreter
  eval_operator
  debugger
  verbose
  monitor
  external
  ;   semantics (nsu monitor)
  NSUMonitor
  NSUException
  NSUObject
  NSUStore
  NSUHeap
  NSUCallStack
  NSULabel
  NSUTopLevel
  NSULevel
  NSULevel2
  NSULevel_Dep
  ;   semantics (extended)
  compiler
  EFunc_metadata
  EPat_metadata
  ; typed
  T_Checker
  T_Expr
  T_Stmt
  T_Op
  T_Ctx
  T_Err
  T_ErrFmt
  T_Typing
  T_Narrowing
  T_Constraint
  T_Pattern
  ;   symbolic
  choice_monad_intf
  choice_monad
  extern_func
  interpreter_functor
  interpreter_functor_intf
  link_env
  object_intf
  memory_intf
  solver
  symbolic
  symbolic_interpreter
  symbolic_object
  symbolic_object2
  symbolic_memory
  symbolic_memory2
  symbolic_value
  value_intf
  value_reducer
  value_translator
  value_typing)
 (preprocess
  (staged_pps ppx_import ppx_deriving.std))
 (libraries str encoding menhirLib yojson z3 bos bos.setup esl_share))

(subdir
 syntax/core
 (rule
  (target lexer.ml)
  (deps lexer.mll)
  (action
   (chdir
    %{workspace_root}
    (run %{bin:ocamllex} -ml -q -o %{target} %{deps}))))
 (menhir
  (modules parser)
  (flags --table --explain)))

(subdir
 syntax/extended
 (rule
  (target eLexer.ml)
  (deps eLexer.mll)
  (action
   (chdir
    %{workspace_root}
    (run %{bin:ocamllex} -ml -q -o %{target} %{deps}))))
 (menhir
  (modules eParser)
  (flags --table --explain)))
